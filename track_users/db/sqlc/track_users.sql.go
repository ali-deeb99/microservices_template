// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: track_users.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTrackUser = `-- name: CreateTrackUser :exec
INSERT INTO track_user (name, counter)
VALUES ($1, $2)
`

type CreateTrackUserParams struct {
	Name    string      `json:"name"`
	Counter pgtype.Int4 `json:"counter"`
}

func (q *Queries) CreateTrackUser(ctx context.Context, arg CreateTrackUserParams) error {
	_, err := q.db.Exec(ctx, createTrackUser, arg.Name, arg.Counter)
	return err
}

const getCounterUser = `-- name: GetCounterUser :one
SELECT id
FROM track_user
WHERE name = $1
`

func (q *Queries) GetCounterUser(ctx context.Context, name string) (int32, error) {
	row := q.db.QueryRow(ctx, getCounterUser, name)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const updateUserCounter = `-- name: UpdateUserCounter :exec
UPDATE track_user
SET counter = counter::BIGINT + 1::BIGINT
WHERE name = $1
`

func (q *Queries) UpdateUserCounter(ctx context.Context, name string) error {
	_, err := q.db.Exec(ctx, updateUserCounter, name)
	return err
}
