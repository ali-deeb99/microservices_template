// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: order.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (name, note, status) 
VALUES ($1, $2, $3)RETURNING name
`

type CreateOrderParams struct {
	Name   string      `json:"name"`
	Note   pgtype.Text `json:"note"`
	Status int64       `json:"status"`
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) (string, error) {
	row := q.db.QueryRow(ctx, createOrder, arg.Name, arg.Note, arg.Status)
	var name string
	err := row.Scan(&name)
	return name, err
}

const updateOrder = `-- name: UpdateOrder :exec
UPDATE orders 
SET status = $1 
WHERE id = $2
`

type UpdateOrderParams struct {
	Status int64 `json:"status"`
	ID     int32 `json:"id"`
}

func (q *Queries) UpdateOrder(ctx context.Context, arg UpdateOrderParams) error {
	_, err := q.db.Exec(ctx, updateOrder, arg.Status, arg.ID)
	return err
}
