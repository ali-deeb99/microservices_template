version: '3.8'
services:
  order:
    build:
      context: ./order_service
      dockerfile: Dockerfile
    networks:
      - ali_network
    ports:
      - "8081:8081"
    environment:
      - DB_SOURCE=${TRACK_DB_SOURCE}
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      kafka:
        condition: service_started

  track:
    build:
      context: ./track_users
      dockerfile: Dockerfile
    networks:
      - ali_network
    ports:
      - "8082:8082"
    environment:
      - DB_SOURCE=${TRACK_DB_SOURCE}
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      kafka:
        condition: service_started
      order:
        condition: service_started

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - ali_network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

volumes:
  order_data:
  track_data:

networks:
  ali_network:
    external: true